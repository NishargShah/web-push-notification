{"version":3,"sources":["config.js","firebase.js","assets/icon.png","index.js"],"names":["url","process","vapidKey","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","setTokenSentToServer","sent","window","localStorage","setItem","sendTokenToServer","currentToken","getItem","console","debug","init","a","firebase","initializeApp","messaging","isSupported","navigator","serviceWorker","register","registration","Notification","requestPermission","getToken","serviceWorkerRegistration","scope","onMessage","payload","log","App","useEffect","notification","askForToken","token","error","className","src","icon","alt","onClick","ReactDOM","render","document","getElementById"],"mappings":"8NAAaA,EAAG,UAAMC,0BAAN,4BAKHC,EAAW,0FAEXC,EAAiB,CAC5BC,OAAQ,0CACRC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,gB,QCRXC,G,MAAuB,SAAAC,GAAI,OAAIC,OAAOC,aAAaC,QAAQ,eAAgBH,EAAO,IAAM,OAExFI,EAAoB,SAAAC,GAJwD,MAAhDJ,OAAOC,aAAaI,QAAQ,iBAM1DC,QAAQC,MAAM,6BAA8BH,GAC5CN,GAAqB,IAErBQ,QAAQC,MAAM,0EAgDH,GAAEC,KA5CP,uCAAG,gCAAAC,EAAA,6DACXC,IAASC,cAAcrB,GAEjBsB,EAAYF,IAASE,YAC3BN,QAAQC,MAAM,aAAcG,IAASE,UAAUC,eAJpC,kBAOkBC,UAAUC,cAAcC,SAAS7B,GAPnD,cAOH8B,EAPG,gBAQgBC,aAAaC,oBAR7B,UASU,YATV,+BAUPb,QAAQC,MAAM,oCAVP,oBAYsBK,EAAUQ,SAAS,CAC5C/B,WACAgC,0BAA2BJ,IAdxB,aAYCb,EAZD,0CAiBGD,EAAkBC,GAjBrB,QAkBHH,aAAaC,QAAQ,gBAAiBE,GACtCE,QAAQC,MAAM,gBAAiBH,GAnB5B,wBAqBHE,QAAQC,MAAM,uEACdT,GAAqB,GAtBlB,2DAyBLQ,QAAQC,MAAM,6BAAd,MAzBK,gCA4BPD,QAAQC,MAAM,uCA5BP,QA8BTD,QAAQC,MAAM,qCAAsCU,EAAaK,OA9BxD,kDAgCThB,QAAQC,MAAM,6CAAd,MAhCS,QAuCXK,EAAUW,WAAU,SAAAC,GAClBlB,QAAQmB,IAAI,mBAAoBD,MAxCvB,kEAAH,sDCjBK,MAA0B,iC,eCQnCE,EAAM,WACVC,qBAAU,WACR,sBAAC,sBAAAlB,EAAA,+EAAYmB,EAAapB,QAAzB,0CAAD,KACC,IAEH,IAAMqB,EAAW,uCAAG,8BAAApB,EAAA,sEAEVG,EAAYF,IAASE,YAFX,SAGIA,EAAUQ,SAAS,CAAE/B,aAHzB,cAGVyC,EAHU,OAIhBxB,QAAQmB,IAAIK,GAJI,kBAKTA,GALS,gCAOhBxB,QAAQyB,MAAM,QAAd,MAPgB,yDAAH,qDAWjB,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,oBAAIH,UAAU,YAAd,2DAEF,wBAAQI,QAASP,EAAjB,8CAONQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.8a9912ae.chunk.js","sourcesContent":["export const url = `${process.env.REACT_APP_BASE_PATH}firebase-messaging-sw.js`;\n\n// NOT USED ANYWHERE BUT JUST FOR LISTING\nexport const serverKey = 'AAAA_Wi7tbU:APA91bGbBbgPR4cQXJS51onTK_Ja6gaZ4jwkqd29KETPwtewt6m4ljQwwWRY180vXka6lZZwH6seZ7lFBXH5C7Nk-Hgwv2tx-s4_0bQvx3UKQvN_iytxmCOAW3EUn3Pw_dxrP-sIlXZq';\n\nexport const vapidKey = 'BEFYw-8jbHc-vf0JcuDhYIbFDakFY2jq2ckoivIBMrK7mSIGv63UvbqQdmGB6xLqcEXedzX25UvraNTP9w1wBNw';\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyC_rH4aQic8PDM63rKEmusgM4q74oWKaGI\",\n  authDomain: \"fir-web-push-notificatio-a1af8.firebaseapp.com\",\n  projectId: \"fir-web-push-notificatio-a1af8\",\n  storageBucket: \"fir-web-push-notificatio-a1af8.appspot.com\",\n  messagingSenderId: \"1088383858101\",\n  appId: \"1:1088383858101:web:ca4c1f87c1fa89998495fc\",\n  measurementId: \"G-TQ0LREPX15\"\n};\n","import firebase from 'firebase/app';\nimport { url, vapidKey, firebaseConfig } from './config';\nimport 'firebase/messaging';\n\nconst isTokenSentToServer = () => window.localStorage.getItem('sentToServer') === '1';\n\nconst setTokenSentToServer = sent => window.localStorage.setItem('sentToServer', sent ? '1' : '0');\n\nconst sendTokenToServer = currentToken => {\n  if (!isTokenSentToServer()) {\n    console.debug('Sending token to server...', currentToken);\n    setTokenSentToServer(true);\n  } else {\n    console.debug(\"Token already sent to server so won't send it again unless it changes\");\n  }\n};\n\nconst init = async () => {\n  firebase.initializeApp(firebaseConfig);\n\n  const messaging = firebase.messaging();\n  console.debug('Supported?', firebase.messaging.isSupported());\n\n  try {\n    const registration = await navigator.serviceWorker.register(url);\n    const permission = await Notification.requestPermission();\n    if (permission === 'granted') {\n      console.debug('Notification permission granted.');\n      try {\n        const currentToken = await messaging.getToken({\n          vapidKey,\n          serviceWorkerRegistration: registration,\n        });\n        if (currentToken) {\n          await sendTokenToServer(currentToken);\n          localStorage.setItem('current_token', currentToken);\n          console.debug('General Token', currentToken);\n        } else {\n          console.debug('No Instance ID token available. Request permission to generate one.');\n          setTokenSentToServer(false);\n        }\n      } catch (e) {\n        console.debug('[ERROR] Token not received', e);\n      }\n    } else {\n      console.debug('Unable to get permission to notify.');\n    }\n    console.debug('Registration successful, scope is:', registration.scope);\n  } catch (e) {\n    console.debug('[ERROR] Service worker registration failed', e);\n  }\n\n  // Handle incoming messages. Called when:\n  // - a message is received while the app has focus\n  // - the user clicks on an app notification created by a service worker\n  //   `messaging.setBackgroundMessageHandler` handler.\n  messaging.onMessage(payload => {\n    console.log('Message received', payload);\n  });\n};\n\nexport default { init };\n","export default __webpack_public_path__ + \"static/media/icon.7722d415.png\";","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from \"firebase\";\nimport { vapidKey } from \"./config\";\nimport notification from './firebase';\nimport icon from './assets/icon.png';\nimport './index.css';\n\nconst App = () => {\n  useEffect(() => {\n    (async () => notification.init())();\n  }, []);\n\n  const askForToken = async () => {\n    try {\n      const messaging = firebase.messaging();\n      const token = await messaging.getToken({ vapidKey });\n      console.log(token);\n      return token;\n    } catch (error) {\n      console.error('ERROR', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={icon} className=\"App-logo\" alt=\"icon\"/>\n        <h1 className=\"App-title\">Welcome to the web push notification demo!</h1>\n      </header>\n      <button onClick={askForToken}>\n        Click here to get your token\n      </button>\n    </div>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}